#!/bin/bash

# Documentation: See $errormessage


errormessage='
please specify an input directory. This script will look for
unb_form_out_particleoutput.txt000** files. 
Usage: ramsesplot <dir> <options>

Options: 
All options require clump_0*  and unb_form_out_particleoutput* files.

  -2D <halo-ID> <dir>
    2d-scatterplot of halo <halo-ID>. Child clump particles
    have different colour.

  -3D <halo-ID>  <dir>
    3d-scatterplot of halo <halo-ID>. Child clump particles 
    have different colour.
    
  -all <dir>
    2d-scatterplot of all particles in a halo.

  -c
    same as -cells

  -cp
    same as -cellp

  -cells <halo> <dir>
    plots cells of given halo. Needs clump_map.csv files.

  -cellp <halo> <dir>
    plots cells and particles of given halo. Needs clump_map*.csv files.
   
  -halo2D
    same as -2D

  -halo3D
    same as -3D

  -l
    same as -levels
  
  -levels <dir>
    2d-scatterplot of all particles in a halo, coloured by clump level.
    
  -t
    same as -test.

  -test  <halo> <dir>
    run testscript.

'



#==============================
# Functions
#==============================

function checkdir {
    # $1 is expected to be srcdir
    # checks whether directories exists; exits if not
    if [ ! -d "$1" ]; then
        echo "ERROR: didn't find directory" "$1"
        exit
    fi
}


function checkfiles {
    # $1 is expected to be srcdir
    # checks whether files in directory exists; exits if not
    if [ ! -f "$1" ]; then
        echo "ERROR: didn't find file" "$1"
        exit
    fi
}


function prepare {
    # $1 is expected to be srcdir
    # checks whether given directory and files exists
    # counts noutput and npart to allocate arrays in python scripts
    
    checkdir $1
    checkfiles "$1"/unb_form_out_particleoutput*
    noutput=`ls "$1"/unb_form_out_particleoutput* | wc -l`
    npart=`find "$1" -maxdepth 1 -name 'unb_form_out_particleoutput*' -exec wc -l {} \; | awk '{total += $1} END{print total}'`
    npart=$(($npart-$noutput))
}




#==============================
# Reading command line args
#==============================
if [[ $# < 2 ]]; then 
    echo ""
    echo -e "$errormessage"
    exit







elif [[ $# == 2 ]]; then

    case $1 in
        -all)
        script=$SCR'/ramsesplot-allhalo.py'
        srcdir=$2
        prepare $srcdir
        python3 $script "$noutput" "$npart" "$srcdir"/unb_form_out_particleoutput* 
        ;;
        
        
        -levels | -l)
        script=$SCR'/ramsesplot-levels.py'
        srcdir=$2
        prepare $srcdir
        python3 $script "$noutput" "$npart" "$srcdir"/clump_0* "$srcdir"/unb_form_out_particleoutput* 
        ;;


        *)
        echo "I don't recognise your arguments."
        echo -e "$errormessage"
        exit
    esac








elif [[ $# == 3 ]]; then
    
    case $1 in

        -2D |-halo2D)
        script=$SCR'/ramsesplot-halo2D.py'
        halo=$2; srcdir=$3
        prepare $srcdir
        python3 $script "$noutput" "$halo" "$npart" "$srcdir"/clump_0* "$srcdir"/unb_form_out_particleoutput* 
        ;;


        -3D |-halo3D)
        script=$SCR'/ramsesplot-halo3D.py'
        halo=$2; srcdir=$3
        prepare $srcdir
        python3 $script "$noutput" "$halo" "$npart" "$srcdir"/clump_0* "$srcdir"/unb_form_out_particleoutput* 
        ;;



        -cells | -c )
        script=$SCR'/ramsesplot-cellpositions.py'
        halo=$2; srcdir=$3
        prepare $srcdir
        python3 $script "$noutput" "$halo" "$npart" "$srcdir"/clump_map*
        ;;


        -cells | -c )
        script=$SCR'/ramsesplot-cellpositions.py'
        halo=$2; srcdir=$3
        prepare $srcdir
        python3 $script "$noutput" "$halo" "$npart" "$srcdir"/clump_map*
        ;;


        -cellp | -cp )
        script=$SCR'/ramsesplot-cellparticles.py'
        halo=$2; srcdir=$3
        prepare $srcdir
        python3 $script "$noutput" "$halo" "$npart" "$srcdir"/clump_0* "$srcdir"/unb_form_out_particleoutput* "$srcdir"/clump_map* 
        ;;



        -t | -test )
        script=$SCR'/ramsesplot-test.py'
        halo=$2; srcdir=$3
        prepare $srcdir
        python3 $script "$noutput" "$halo" "$npart" "$srcdir"/clump_0* "$srcdir"/unb_form_out_particleoutput* 
        ;;



        *)
        echo "I don't recognise your arguments."
        echo -e "$errormessage"
        exit
    esac





else
    echo "I don't recognise your arguments."
    echo -e "$errormessage"
    exit
fi













#FROM UNBINDINGPLOT

#  -3D <halo-ID>  <dir>
  #  3d-scatterplot of halo <halo-ID>. Child clump particles 
  #  have different colour.
  #
  #-abc <output-dir>
  #  6 2D plots: 3 -b and 3 -bc for all halos.
  #
  #-all  <halo-ID> <subhalo-ID> <output_dir>
  #  calls flags -filteredhalo3D, -subhalo and -i (and also plots all 
  #  particles which are in clumps).
  #
  #-b <halo-ID> <output_dir>
  #  plots CoM and closest border without parent particles.
  #  also -border
  #
  #-bc <halo-ID> <output_dir>
  #  plots CoM and closest border without parent particles.
  #  Draws a circle from the center of mass to the closest border.
  #  also -borderCircle
  #
  #-b3D <halo-ID> <subhalo-ID> <output_dir>
  #  plots CoM and closest border.
  #  also -border3D
  #
  #-cmp <halo-ID> <dir>
  #  plot the cumulative mass profile of <halo-ID>.
  #  Needs unb_form_out_CMP* files.
  #
  #-com <halo-ID> <dir>
  #  like -halo, but include Center of Masses 
  #  (needs unb_form_out_COM* files)
  #
  #-d <halo-ID> <dir>
  #  plots the mass binning distances.
  #  Needs unb_form_out_dist* files.
  #
  #-filteredhalo3D or -f
  #  just like halo3D, but filters out children with <50 cells
  #
  #-halo <halo-ID> <dir> 
  #  plots all particles that belong to the halo <halo-ID> in
  #  2D for all 3 planes. Child clump particles have different
  #  colour.
  #
  #-hb <halo-ID> <subhalo-ID> <output_dir>
  #  plots CoM and closest border with parent particles.
  #  also -haloBorder
  #
  #-hb3D <halo-ID> <subhalo-ID> <output_dir>
  #  plots CoM and closest border with parent particles.
  #  also -haloBorder3D
  #
  #-hbc <halo-ID> <subhalo-ID> <output_dir>
  #  plots CoM and closest border with parent particles.
  #  also -haloBorderCircle
  #
  #-i <halo-ID> <dir>
  #  writes <halo-ID> information, like number of particles,
  #  unbound particles etc.
  #
  #-single <halo-ID> <dir>
  #  plots only particles assigned to <halo-ID>.
  #
  #-subhalo <subhalo-ID> 
  #   3D plot of a subhalo <subhalo-ID>. 
#


# Reading command line args
#if [[ $# == 0 ]]; then 
#    echo ""
#    echo -e "$errormessage"
#    exit
#elif [[ $# == 1 ]]; then
#    srcdir=$1
#    script=$SCR'/unbindingplot.py'
#    noutput=`ls "$srcdir"/unb_form_out_particleoutput* | wc -l`
#    npart=`find "$srcdir" -name 'unb_form_out_particleoutput*' -exec wc -l {} \; | awk '{total += $1} END{print total}'`
#    npart=$(($npart-$noutput))
#    python3 $script "$noutput" "$npart" "$srcdir"/unb_form_out_particleoutput* 
#
#elif [[ $# == 2 ]]; then
#    case $1 in
#        -AllBorderCircle | -abc)
#        script=$SCR'/unbindingplot-AllHalosBorderCircle.py'
#        srcdir=$2
#        noutput=`ls "$srcdir"/unb_form_out_particleoutput* | wc -l`
#        npart=`find "$srcdir" -name 'unb_form_out_particleoutput*' -exec wc -l {} \; | awk '{total += $1} END{print total}'`
#        npart=$(($npart-$noutput))
#        python3 $script "$noutput" "$npart" "$srcdir"/clump_0* "$srcdir"/unb_form_out_particleoutput* "$srcdir"/unb_form_out_COM* "$srcdir"/unb_form_out_border*
#        ;;
#
#        *)
#        echo "I don't recognise your arguments."
#        echo -e "$errormessage"
#        exit
#    esac
#
#
#elif [[ $# == 3 ]]; then
#    case $1 in
#        -3D |-halo3D)
#        script=$SCR'/unbindingplot-halo3D.py'
#        halo=$2
#        srcdir=$3
#        noutput=`ls "$srcdir"/unb_form_out_particleoutput* | wc -l`
#        npart=`find "$srcdir" -maxdepth 1 -name 'unb_form_out_particleoutput*' -exec wc -l {} \; | awk '{total += $1} END{print total}'`
#        npart=$(($npart-$noutput))
#        echo "noutput:" $noutput "npart:", $npart
#        python3 $script "$noutput" "$halo" "$npart" "$srcdir"/clump_0* "$srcdir"/unb_form_out_particleoutput* 
#        ;;
#
#
#
#
#        -border | -b)
#        script=$SCR'/unbindingplot-Border.py'
#        halo=$2
#        srcdir=$3
#        noutput=`ls "$srcdir"/unb_form_out_particleoutput* | wc -l`
#        npart=`find "$srcdir" -name 'unb_form_out_particleoutput*' -exec wc -l {} \; | awk '{total += $1} END{print total}'`
#        npart=$(($npart-$noutput))
#        python3 $script "$noutput" "$halo" "$npart" "$srcdir"/clump_0* "$srcdir"/unb_form_out_particleoutput* "$srcdir"/unb_form_out_COM* "$srcdir"/unb_form_out_border*
#        ;;
#
#        -borderCircle | -bc)
#        script=$SCR'/unbindingplot-BorderCircle.py'
#        halo=$2
#        srcdir=$3
#        noutput=`ls "$srcdir"/unb_form_out_particleoutput* | wc -l`
#        npart=`find "$srcdir" -name 'unb_form_out_particleoutput*' -exec wc -l {} \; | awk '{total += $1} END{print total}'`
#        npart=$(($npart-$noutput))
#        python3 $script "$noutput" "$halo" "$npart" "$srcdir"/clump_0* "$srcdir"/unb_form_out_particleoutput* "$srcdir"/unb_form_out_COM* "$srcdir"/unb_form_out_border*
#        ;;
#
#        -border3D | -b3D)
#        script=$SCR'/unbindingplot-Border3D.py'
#        halo=$2
#        srcdir=$3
#        noutput=`ls "$srcdir"/unb_form_out_particleoutput* | wc -l`
#        npart=`find "$srcdir" -name 'unb_form_out_particleoutput*' -exec wc -l {} \; | awk '{total += $1} END{print total}'`
#        npart=$(($npart-$noutput))
#        python3 $script "$noutput" "$halo" "$npart" "$srcdir"/clump_0* "$srcdir"/unb_form_out_particleoutput* "$srcdir"/unb_form_out_COM* "$srcdir"/unb_form_out_border*
#        ;;
#
#        -cmp)
#        script=$SCR'/unbinding-cmp.py'
#        srcdir=$3
#        noutput=`ls "$srcdir"/unb_form_out_particleoutput* | wc -l`
#        halo=$2
#        python3 $script "$noutput" "$halo" 0 "$srcdir"/clump_0* "$srcdir"/unb_form_out_CMP*
#        ;;
#
#        -com | -haloCOM)
#        script=$SCR'/unbindingplot-haloCOM.py'
#        halo=$2
#        srcdir=$3
#        noutput=`ls "$srcdir"/unb_form_out_particleoutput* | wc -l`
#        npart=`find "$srcdir" -name 'unb_form_out_particleoutput*' -exec wc -l {} \; | awk '{total += $1} END{print total}'`
#        npart=$(($npart-$noutput))
#        python3 $script "$noutput" "$halo" "$npart" "$srcdir"/clump_0* "$srcdir"/unb_form_out_particleoutput* "$srcdir"/unb_form_out_COM* 
#        ;;
#
#        -d)
#        script=$SCR'/unbinding-dist.py'
#        srcdir=$3
#        noutput=`ls "$srcdir"/unb_form_out_particleoutput* | wc -l`
#        halo=$2
#        python3 $script "$noutput" "$halo" 0 "$srcdir"/clump_0* "$srcdir"/unb_form_out_dist*
#
#        ;;
#
#
#        -filteredhalo3D | -f)
#        script=$SCR'/unbindingplot-filteredhalo3D.py'
#        halo=$2
#        srcdir=$3
#        noutput=`ls "$srcdir"/unb_form_out_particleoutput* | wc -l`
#        npart=`find "$srcdir" -name 'unb_form_out_particleoutput*' -exec wc -l {} \; | awk '{total += $1} END{print total}'`
#        npart=$(($npart-$noutput))
#        python3 $script "$noutput" "$halo" "$npart" "$srcdir"/clump_0* "$srcdir"/unb_form_out_particleoutput* "$srcdir"/unb_form_out_COM* 
#        ;;
#
#        -halo)
#        script=$SCR'/unbindingplot-halo.py'
#        halo=$2
#        srcdir=$3
#        noutput=`ls "$srcdir"/unb_form_out_particleoutput* | wc -l`
#        npart=`find "$srcdir" -name 'unb_form_out_particleoutput*' -exec wc -l {} \; | awk '{total += $1} END{print total}'`
#        npart=$(($npart-$noutput))
#        python3 $script "$noutput" "$halo" "$npart" "$srcdir"/clump_0* "$srcdir"/unb_form_out_particleoutput* 
#
#        ;;
#
#
#        -haloBorder | -hb)
#        script=$SCR'/unbindingplot-haloBorder.py'
#        halo=$2
#        srcdir=$3
#        noutput=`ls "$srcdir"/unb_form_out_particleoutput* | wc -l`
#        npart=`find "$srcdir" -name 'unb_form_out_particleoutput*' -exec wc -l {} \; | awk '{total += $1} END{print total}'`
#        npart=$(($npart-$noutput))
#        python3 $script "$noutput" "$halo" "$npart" "$srcdir"/clump_0* "$srcdir"/unb_form_out_particleoutput* "$srcdir"/unb_form_out_COM* "$srcdir"/unb_form_out_border*
#        ;;
#
#        -haloBorderCircle | -hbc)
#        script=$SCR'/unbindingplot-haloBorderCircle.py'
#        halo=$2
#        srcdir=$3
#        noutput=`ls "$srcdir"/unb_form_out_particleoutput* | wc -l`
#        npart=`find "$srcdir" -name 'unb_form_out_particleoutput*' -exec wc -l {} \; | awk '{total += $1} END{print total}'`
#        npart=$(($npart-$noutput))
#        python3 $script "$noutput" "$halo" "$npart" "$srcdir"/clump_0* "$srcdir"/unb_form_out_particleoutput* "$srcdir"/unb_form_out_COM* "$srcdir"/unb_form_out_border*
#        ;;
#
#        -haloBorder3D | -hb3D)
#        script=$SCR'/unbindingplot-haloBorder3D.py'
#        halo=$2
#        srcdir=$3
#        noutput=`ls "$srcdir"/unb_form_out_particleoutput* | wc -l`
#        npart=`find "$srcdir" -name 'unb_form_out_particleoutput*' -exec wc -l {} \; | awk '{total += $1} END{print total}'`
#        npart=$(($npart-$noutput))
#        python3 $script "$noutput" "$halo" "$npart" "$srcdir"/clump_0* "$srcdir"/unb_form_out_particleoutput* "$srcdir"/unb_form_out_COM* "$srcdir"/unb_form_out_border*
#        ;;
#
#        -i)
#        script=$SCR'/unbinding-info.py'
#        srcdir=$3
#        noutput=`ls "$srcdir"/unb_form_out_particleoutput* | wc -l`
#        halo=$2
#        npart=`find "$srcdir" -name 'unb_form_out_particleoutput*' -exec wc -l {} \; | awk '{total += $1} END{print total}'`
#        npart=$(($npart-$noutput))
#        python3 $script "$noutput" "$halo" "$npart" "$srcdir"/clump_0* "$srcdir"/unb_form_out_particleoutput*
#        ;;
#
#        -single)
#        script=$SCR'/unbindingplot-singleclump.py'
#        halo=$2
#        srcdir=$3
#        noutput=`ls "$srcdir"/unb_form_out_particleoutput* | wc -l`
#        npart=`find "$srcdir" -name 'unb_form_out_particleoutput*' -exec wc -l {} \; | awk '{total += $1} END{print total}'`
#        npart=$(($npart-$noutput))
#        python3 $script "$noutput" "$halo" "$npart" "$srcdir"/clump_0* "$srcdir"/unb_form_out_particleoutput* 
#        ;;
#        
#        -subhalo)
#        script=$SCR'/unbindingplot-subhalo.py'
#        subhalo=$2
#        srcdir=$3
#        noutput=`ls "$srcdir"/unb_form_out_particleoutput* | wc -l`
#        npart=`find "$srcdir" -name 'unb_form_out_particleoutput*' -exec wc -l {} \; | awk '{total += $1} END{print total}'`
#        npart=$(($npart-$noutput))
#        python3 $script "$noutput" "$subhalo" "$npart" "$srcdir"/clump_0* "$srcdir"/unb_form_out_particleoutput* 
#        ;;
#
#
#        *)
#        echo "I don't recognise your arguments."
#        echo -e "$errormessage"
#        exit
#    esac
#    srcdir=$2
#
#elif [[ $# == 4 ]]; then
#    case $1 in
#         -all)
#        halo=$2
#        subhalo=$3
#        srcdir=$4
#        noutput=`ls "$srcdir"/unb_form_out_particleoutput* | wc -l`
#        npart=`find "$srcdir" -name 'unb_form_out_particleoutput*' -exec wc -l {} \; | awk '{total += $1} END{print total}'`
#        npart=$(($npart-$noutput))
#
#        echo "UNBDINGINGPLOT ALL."
#        echo "1 - PLOTTING CLUMPPARTICLES"
#        echo "Skipped."
#        #script=$SCR'/plot_particles-noaxislimits.py'
#        #python3 $script "$noutput" "$srcdir"/unb_form_out_particleoutput* 
#
#        echo ""
#        echo "2 - PLOTTING UNBOUND PARTICLES"
#        echo "Skipped."
#        #script=$SCR'/unbindingplot.py'
#        #python3 $script "$noutput" "$npart" "$srcdir"/unb_form_out_particleoutput* 
#
#        echo ""
#        echo "3 - PLOTTING HALO 3D"
#        script=$SCR'/unbindingplot-filteredhalo3D.py'
#        python3 $script "$noutput" "$halo" "$npart" "$srcdir"/clump_0* "$srcdir"/unb_form_out_particleoutput* 
#
#        echo ""
#        echo "4 - PLOTTING SUBHALO 3D"
#        script=$SCR'/unbindingplot-subhalo.py'
#        python3 $script "$noutput" "$subhalo" "$npart" "$srcdir"/clump_0* "$srcdir"/unb_form_out_particleoutput* 
#
#        
#        echo ""
#        #echo "5 - PLOTTING CMP"
#        #script=$SCR'/unbinding-cmp.py'
#        #python3 $script "$noutput" "$halo" 0 "$srcdir"/clump_0* "$srcdir"/unb_form_out_CMP*
#
#        echo ""
#        #echo "6 - PLOTTING DISTANCES"
#        #script=$SCR'/unbinding-dist.py'
#        #python3 $script "$noutput" "$halo" 0 "$srcdir"/clump_0* "$srcdir"/unb_form_out_dist*
#
#
#        echo ""
#        echo "7 - WRITING INFO"
#        script=$SCR'/unbinding-info.py'
#        python3 $script "$noutput" "$halo" "$npart" "$srcdir"/clump_0* "$srcdir"/unb_form_out_particleoutput*
#
#       
#        echo ""
#        echo "8 - CREATING EXCLUSIVE PLOTS"
#
#        script=$SCR'/unbindingplot-singleclump.py'
#        
#        echo "8.1 - HALO AFTER"
#        python3 $script "$noutput" "$halo" "$npart" "$srcdir"/clump_0* "$srcdir"/unb_form_out_particleoutput* 
#        mv singleclump_0plot"$halo"_3D.png namegiver"$halo"after.png
#
#        echo "8.2 - SUBHALO AFTER"
#        python3 $script "$noutput" "$subhalo" "$npart" "$srcdir"/clump_0* "$srcdir"/unb_form_out_particleoutput* 
#        mv singleclump_0plot"$subhalo"_3D.png subhalo"$subhalo"after.png
#
#        cd $srcdir
#        cp clump* before/
#
#        echo "8.3 - SUBHALO BEFORE"
#        python3 $script "$noutput" "$subhalo" "$npart" before/clump_0* before/unb_form_out_particleoutput* 
#        mv singleclump_0plot"$subhalo"_3D.png ../subclump"$subhalo"before.png
#
#        echo "8.4 - HALO BEFORE"
#        python3 $script "$noutput" "$halo" "$npart" before/clump_0* before/unb_form_out_particleoutput* 
#        mv singleclump_0plot"$halo"_3D.png namegiver"$halo"before.png
#
#        cd ..
#        ;;
#
#
#        *)
#        echo "I don't recognise your arguments."
#        echo -e "$errormessage"
#        exit
#
#
#
#        ;;
#    esac
#
#else
#    echo "I don't recognise your arguments."
#    echo -e "$errormessage"
#    exit
#fi
#
#
#
#
#
#
